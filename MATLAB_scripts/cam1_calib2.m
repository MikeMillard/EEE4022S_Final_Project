% Camera 1 Single Camera Second Calibration
% Michael Millard
% Date: 16/09/2022

% Define images to process
imageFileNames = {'..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_1.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_2.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_3.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_4.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_5.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_6.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_7.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_8.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_9.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_10.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_11.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_12.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_13.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_14.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_15.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_16.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_17.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_18.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_19.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_20.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_21.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_22.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_23.bmp',...
    '..\Project_Pics\Calibration2\Cam1\cam1_calib_pose_24.bmp',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 10;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams2Cam1, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

if 1
    % View reprojection errors
    h1=figure; showReprojectionErrors(cameraParams2Cam1);

    % Visualize pattern locations
    h2=figure; showExtrinsics(cameraParams2Cam1, 'CameraCentric');

    % Display parameter estimation errors
    displayErrors(estimationErrors, cameraParams2Cam1);
end
